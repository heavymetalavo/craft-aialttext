{# @var plugin \heavymetalavo\craftaialttext\AiAltText #}
{# @var settings \heavymetalavo\craftaialttext\models\Settings #}
{% import '_includes/forms.twig' as forms %}

<h2>Instructions</h2>

<p>Lots of info in <a target="_blank" href="https://github.com/heavymetalavo/craft-aialttext">the plugin docs</a>, but in short;
<ol>
    <li>Check the plugin settings are suitable for your project</li>
    <li>Go to the <strong>Assets</strong> section in the Control Panel to view the table of assets</li>
    <li>Select the checkboxes of all the assets you want to generate alt text for</li>
    <li>Click the cog icon to reveal the Element actions and select <strong>Generate AI Alt Text</strong></li>
    <li>The plugin will queue jobs to generate alt text for each selected asset</li>
</ol>

<h2>Settings</h2>

{{ forms.autosuggestField({
    label: "OpenAI API Key"|t("aialttext"),
    instructions: "The API key from your Open AI account"|t("aialttext"),
    id: "openAiApiKey",
    name: "openAiApiKey",
    suggestEnvVars: true,
    value: settings.openAiApiKey,
    errors: settings.getErrors("openAiApiKey"),
}) }}

{{ forms.textareaField({
    label: 'Prompt'|t('app'),
    id: 'prompt',
    name: 'prompt',
    instructions: "The text prompt which will be sent to OpenAI with the image to generate the response, supports simple Asset Model and Site Model fields using `{asset.property}` and `{site.property}`"|t("aialttext"),
    value: settings.prompt,
    placeholder: 'Generate a brief (roughly 150 characters maximum) alt text description focusing on the main subject and overall composition. Do not add a prefix of any kind (e.g. alt text: AI content) so the value is suitable for the alt text attribute value of the image. Output in {site.language}',
    errors: settings.getErrors('prompt'),
}) }}

{{ forms.autosuggestField({
    label: 'Open AI Model'|t('app'),
    id: 'openAiModel',
    name: 'openAiModel',
    instructions: "The OpenAI model used to generate the response. To find out which models are capable of vision OpenAI suggest to look [on the models page](https://platform.openai.com/docs/models)"|t("aialttext"),
    value: settings.openAiModel,
    placeholder: 'gpt-4o-mini',
    errors: settings.getErrors('openAiModel'),
    suggestEnvVars: true,
}) }}

{{ forms.autosuggestField({
    label: 'Open AI Image Input Detail Level'|t('app'),
    id: 'openAiImageInputDetailLevel',
    name: 'openAiImageInputDetailLevel',
    instructions: "Specify the [Image input detail level](https://platform.openai.com/docs/guides/images?api-mode=responses&format=url#specify-image-input-detail-level), `low` costs the least at 85 tokens. Please read about [Image input requirements](https://platform.openai.com/docs/guides/images#image-input-requirements), [limitations](https://platform.openai.com/docs/guides/images?api-mode=responses&format=url#limitations) and [calculating costs & cost calculation examples](https://platform.openai.com/docs/guides/images?api-mode=responses&format=url#calculating-costs) in the OpenAI platform docs for more."|t("aialttext"),
    value: settings.openAiImageInputDetailLevel,
    placeholder: 'low',
    errors: settings.getErrors('openAiImageInputDetailLevel'),
    suggestEnvVars: true,
}) }}

{{ forms.lightswitchField({
    label: 'Save same results to every Site'|t('aialttext'),
    id: 'saveSingleResultToEachSite',
    name: 'saveSingleResultToEachSite',
    instructions: "If enabled, the plugin will save the same single result from the current Craft Site's language to each Craft Site's Asset's translatable alt text field"|t("aialttext"),
    on: settings.saveSingleResultToEachSite,
    errors: settings.getErrors('saveSingleResultToEachSite'),
}) }}

{{ forms.lightswitchField({
    label: 'Save translated results for each Site'|t('aialttext'),
    id: 'saveTranslatedResultsToEachSite',
    name: 'saveTranslatedResultsToEachSite',
    instructions: "If enabled, the plugin will make an extra request to the OpenAI API for each Craft Site to generate translated alt text on the Asset in the assigned language for each Craft Site"|t("aialttext"),
    on: settings.saveTranslatedResultsToEachSite,
    errors: settings.getErrors('saveTranslatedResultsToEachSite'),
}) }}
